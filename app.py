import streamlit as st
import pandas as pd

from modules.cleaning import clean_data
from modules.eda import show_eda
from modules.visualization import visualize_data
from modules.outliers import detect_outliers
from modules.anomaly import anomaly_detection
from modules.clustering import clustering_app
from modules.timeseries import time_series_app
from modules.modeling import run_model
from modules.export import download_data

# Page config
st.set_page_config(page_title="Data Toolkit Suite", layout="wide")
st.title("üß∞ Data Toolkit Suite")
st.markdown("<small>C√¥ng c·ª• h·ªó tr·ª£ x·ª≠ l√Ω v√† kh√°m ph√° d·ªØ li·ªáu.</small>", unsafe_allow_html=True)


# Init state
if "df" not in st.session_state:
    st.session_state.df = None

# N·∫øu ch∆∞a c√≥ d·ªØ li·ªáu: hi·ªÉn th·ªã ph·∫ßn H∆∞·ªõng d·∫´n + Gi·ªõi thi·ªáu + Import
if st.session_state.df is None:
    st.markdown("## H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng")
    st.markdown("""
    **1. T·∫£i file `.csv` t·ª´ m√°y b·∫°n ƒë·ªÉ b·∫Øt ƒë·∫ßu ph√¢n t√≠ch**  
    **2. Sau khi t·∫£i l√™n, sidebar s·∫Ω hi·ªÉn th·ªã c√°c module x·ª≠ l√Ω**

    üëâ D·ªØ li·ªáu m·∫´u g·ª£i √Ω: `iris.csv`, `titanic.csv`, `sales.csv`
    """)

    with st.expander("Gi·ªõi thi·ªáu d·ª± √°n"):
        st.markdown("""
        **üß∞ Data Toolkit Suite** l√† c√¥ng c·ª• web h·ªó tr·ª£ l√†m s·∫°ch v√† kh√°m ph√° d·ªØ li·ªáu cho ng∆∞·ªùi h·ªçc ng√†nh data
        - D√πng c√°c th∆∞ vi·ªán: Streamlit, Pandas, Scikit-learn
        - Kh√¥ng c·∫ßn vi·∫øt code ‚Äì Ch·∫°y tr·ª±c ti·∫øp tr√™n tr√¨nh duy·ªát
        - Ch·ªâ c·∫ßn t·∫£i d·ªØ li·ªáu v√† ch·ªçn module

        **T√°c gi·∫£** [Nhat Thien An](https://databinocs.com/about/)
        **Ngu·ªìn s·ªü h·ªØu:** [databinocs](https://github.com/databinocs/)
        """)

    # Hi·ªÉn th·ªã upload file
    st.markdown("### üì§ T·∫£i d·ªØ li·ªáu CSV")
    uploaded_file = st.file_uploader("Ch·ªçn file CSV", type=["csv"])
    if uploaded_file:
        df = pd.read_csv(uploaded_file)
        st.session_state.df = df
        st.success("‚úÖ D·ªØ li·ªáu ƒë√£ t·∫£i th√†nh c√¥ng!")
        st.dataframe(df, use_container_width=True)

# N·∫øu ƒë√£ c√≥ d·ªØ li·ªáu: hi·ªÉn th·ªã sidebar + module x·ª≠ l√Ω
else:
    df = st.session_state.df

    st.success("‚úÖ D·ªØ li·ªáu ƒë√£ s·∫µn s√†ng")

    # Menu ch·ªçn ch·ª©c nƒÉng (n·∫±m gi·ªØa trang, kh√¥ng d√πng sidebar)
    st.markdown("## üìÇ Ch·ªçn ch·ª©c nƒÉng")
    menu = st.radio(
        label="",
        options=[
            "Cleaning",
            "EDA Processing",
            "Visualization",
            "Outlier Detection",
            "Anomaly Detection",
            "Clustering",
            "Time Series",
            "Modeling"
        ],
        horizontal=True
    )

    # Giao di·ªán theo ch·ª©c nƒÉng
    if menu == "Cleaning":
        clean_data(df)

    elif menu == "EDA Processing":
        show_eda(df)

    elif menu == "Visualization":
        visualize_data(df)

    elif menu == "Outlier Detection":
        detect_outliers(df)

    elif menu == "Anomaly Detection":
        anomaly_detection(df)

    elif menu == "Clustering":
        clustering_app(df)

    elif menu == "Time Series":
        time_series_app(df)

    elif menu == "Modeling":
        run_model(df)

    # Hi·ªÉn th·ªã ph·∫ßn Export sau module x·ª≠ l√Ω
    st.markdown("---")
    download_data(df)






